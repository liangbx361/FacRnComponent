// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "${CONFIG_URL}/loadConfig.gradle"

buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'http://nexus.sdp.nd/nexus/content/groups/android-public/'
        }
//        maven {
//            url 'https://github.com/bonree/classrewriter/raw/master'
//        }

       // mavenCentral()
        //jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.3'
//        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.3.0'
        //classpath 'com.networkbench.newlens.agent.android:agent-gradle-plugin:2.4.2'

        //classpath 'com.bonree.agent.android:gradle:2.0.1';
        //classpath 'com.bonree.agent.android:classrewriter:2.0.2'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        //mavenLocal()
        maven { url 'http://nexus.sdp.nd/nexus/content/groups/android-public/' }
//        maven {
//            url 'https://github.com/bonree/classrewriter/raw/master'
//        }

        //mavenCentral()
        //jcenter()

//        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
//            url "$rootDir/../node_modules/react-native/android"
//        }
    }
    //buildDir = "R:/${rootProject.name}/${project.name}/build"

    group = POM_GROUP_ID
    version = POM_VERSION
}

//def patchKeepSpecs() {
//    def taskClass = "com.android.build.gradle.internal.tasks.multidex.CreateManifestKeepList";
//    def clazz = this.class.classLoader.loadClass(taskClass)
//    def keepSpecsField = clazz.getDeclaredField("KEEP_SPECS")
//    keepSpecsField.setAccessible(true)
//    def keepSpecsMap = (Map) keepSpecsField.get(null)
//    if (keepSpecsMap.remove("activity") != null) {
//        println "KEEP_SPECS patched: removed 'activity' root"
//    } else {
//        println "Failed to patch KEEP_SPECS: no 'activity' root found"
//    }
//}
//
//patchKeepSpecs()